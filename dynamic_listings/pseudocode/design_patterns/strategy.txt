abstract class Strategy{
    // This class defines the strategy interface the client will refer to

    public function algorithm(){
        // This algorithm will be implemented by the subclasses
    }
}

class ConcreteStrategy1 inherits from Strategy{
    public function algorithm() override{
        // Real implementation of the algorithm
        // DO STUFF
    }
}

class ConcreteStrategy2 inherits from Strategy{
    public function algorithm() override{
        // Real implementation of the algorithm
        // DO STUFF SLIGHTLY DIFFERENTLY
    }
}

// Example Usage
function main(){
    Strategy to_execute;
    if condition{
        to_execute = new ConcreteStrategy1();
    }else{
        to_execute = new ConcreteStrategy2();
    }
    to_execute.algorithm();  // This will execute 1 or 2 depending on "condition"
}


