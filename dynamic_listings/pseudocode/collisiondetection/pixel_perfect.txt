class Color{
    int colorData;
    bool function isWhite();
}

structure Bitmask{
    Color[] data;
    Color getColor(x, y);
}

structure Sprite{
    Bitmask bitmask;
    int x;
    int y;
    int width;
    int height;
}

bool function pixel_perfect_collision(Sprite A, Sprite B){
    // Calculate the intersecting rectangle to limit checks
    int x1 = max(A.x, B.x);
    int x2 = min((A.x + A.width), (B.x + B.width));

    int y1 = max(A.y, B.y);
    int y2 = min((A.y + A.height), (B.y + B.height));

    // For each pixes in the intersecting rectangle, let's check
    for (each y from y1 to y2){
        for (each x from x1 to x2){
            a = A.bitmask.getColor(x - A.x, y - A.y);
            b = B.bitmask.getColor(x - B.x, y - B.y);

            if (a.isWhite() AND b.isWhite()){
                return True;
            }
        }
    }

    // If no collision is occurred by the end of the checking, we're safe
    return False;
}
