constant TILE_WIDTH = 32;
constant TILE_HEIGHT = 32;

struct Rectangle{
    // A rectangle will represent the player
    Point corner;
    int width;
    int height;
}

int[] function convert_pixels_to_tile(int x, int y){
    // Converts a point into tile coordinates
    int tile_x = floor(x / TILE_WIDTH);
    int tile_y = floor(y / TILE_HEIGHT);
    return [tile_x, tile_y];
}

// We assume the player is falling, so no check will be shown here
Point[] points_to_check = [
    Point(player.corner.x, player.corner.y + player.height),
    Point(player.corner.x + player.width, player.corner.y + player.height),
]
for (each point in points_to_check){
    int[] detected_tile_coordinates = convert_pixels_to_tile(point.x, point.y)
    Tile detected_tile = get_tile(detected_tile_coordinates[0], detected_tile_coordinates[1])
    if (AABB(player, detected_tile.rectangle)){
        // React to the collision
        // ...
    }
}
