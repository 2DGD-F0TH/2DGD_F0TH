struct Point{
    // Rewritten as a memo
    int x;
    int y;
};

class Rectangle{
    Point corner
    int width
    int height
    // ...
    static function from_points(Point topleft, Point bottomright){
        // ...
    }
// ...
}

function bounding_box(Point[] vertices){
    // First we create and bootstrap the variables
    int xmin = vertices[0].x;
    int xmax = vertices[0].x;
    int ymin = vertices[0].y;
    int ymax = vertices[0].y;
    // Now we iterate through all the other vertices
    for (i = 0; i < vertices.length(); i++){
        if vertex[i].x < xmin{
            xmin = vertex[i].x;
        }
        if vertex[i].x > xmax{
            xmax = vertex[i].x;
        }
        if vertex[i].y < ymin{
            ymin = vertex[i].y;
        }
        if vertex[i].y > ymax{
            ymax = vertex[i].y;
        }
    }
    // Now we can build the needed points for the bounding box
    A = Point();
    C = Point();
    A.x = xmin;
    A.y = ymin;
    C.x = xmax;
    C.y = ymax;
    // We build our bounding box
    boundingBox = Rectangle.from_points(A, C)
    // and return it
    return boundingBox
}
