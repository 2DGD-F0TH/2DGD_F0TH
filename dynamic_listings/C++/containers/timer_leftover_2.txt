class Timer{
    /*
     * ...
     * This is the same as the older version
     * ...
     */

    public:
        void update(float dt){
            if (not active){
                // We return directly if the timer is disabled
                return;
            }
            // Like any other entity, we update it
            time = time - dt;
            // When the timer "ticks", we execute the function
            if (time <= 0){
                function_to_execute();
                if (one_shot){
                    // If this timer is a one-shot, we disable it
                    active = False;
                }
                // We reset the timer differently, by adding the "set time" with a multiplier
                // this.time is guaranteed to be negative or zero, by dividing by a negative number
                // we have a positive multiplier
                int multiplier = ceil(time / -set_time);
                time = time + (multiplier * set_time);
            }
        }
}
